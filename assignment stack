class Stack
{
    private:
        char input_str[SIZE];
        char stack_data[SIZE];
        int top,length,char_count;
public:
    Stack() //constructor
    {
        top=-1;
        length=0;
        char_count=0;
    }
    void push(char);
    char pop();
    void input_data();
    void check_palindrome();
    void get_characters_only();
    void display_original();
    void display_reverse();
}

void Stack::push(char temp)
{
    if(top==SIZE-1)
    {
        cout<<"\n Stack Overflow!!!";
        return;
    }
    top++;
    stack_data[top]=temp;
}
char Stack::pop()
{
    if(top==-1)
    {
        cout<<"\n Stack Underflow!!!";
        char ch='\n';
        return ch;
    }
    char temp=stack_data[top];
    top--;
    return temp;
}
void Stack::input_data()
{
    cout<<"\n Enter a String: ";
    cin.getline(input_str,SIZE);
    length=strlen(input_str);
}

void Stack::get_characters_only()
{
    char temp[SIZE];
    int i,j;
    for(i=0; i<length; i++)
    {
        temp[i]=input_str[i];
    }
    j=0;
    for(i=0; i<length; i++ )
    {
        if(isalpha(temp[i]))
        {
            input_str[j]=tolower(temp[i]);
            j++;
        }
    }
    length=j;  //on removing spaces,punctuations
                //new length is obtained
}
void Stack::check_palindrome()
{
    for(int i=0; i<length; i++)
        push(input_str[i]);
    for(int i=0; i<length; i++)
    {
        if(input_str[i]==pop())//finding a match
            char_count++;
    }
    if(char_count==length)
        cout<<"\n Given string is a Palindrome!!!\n";
    else
        cout<<"\n Given string is not a Palindrome!!!\n";
}
void Stack::display_original()
{
    for(int i=0; i<=length-1; i++)
        cout<<input_str[i];
}
void Stack::display_reverse()
{
    for(int i=length-1; i>=0; i--)
        cout<<input_str[i];
}
int main()
{
    Stack obj;
    obj.input_data();
    obj.get_characters_only();
    cout<<"\n Displaying the original String:  ";
    obj.display_original();
    cout<<"\n Displaying the reversed string:  ";
    obj.display_reverse();
    cout<<"\n\t Checking for Palindrome....\n";
    obj.check_palindrome();
    return 0;
}
